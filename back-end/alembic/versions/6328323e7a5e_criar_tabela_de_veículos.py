"""Criar tabela de veÃ­culos

Revision ID: 6328323e7a5e
Revises: 58593b8752cf
Create Date: 2025-06-12 17:10:53.625957

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '6328323e7a5e'
down_revision: Union[str, None] = '58593b8752cf'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Vehicle',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('plate', sa.String(), nullable=False),
    sa.Column('renavam', sa.BigInteger(), nullable=False),
    sa.Column('brand', sa.String(), nullable=False),
    sa.Column('model', sa.String(), nullable=False),
    sa.Column('vehicle_year', sa.Integer(), nullable=False),
    sa.Column('color', sa.String(), nullable=True),
    sa.Column('chassi_number', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['Users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_Vehicle_id'), 'Vehicle', ['id'], unique=False)
    op.drop_index(op.f('ix_Company_id'), table_name='Company')
    op.drop_table('Company')
    op.drop_index(op.f('ix_User_email'), table_name='User')
    op.drop_index(op.f('ix_User_id'), table_name='User')
    op.drop_table('User')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('User',
    sa.Column('id', sa.INTEGER(), server_default=sa.text('nextval(\'"User_id_seq"\'::regclass)'), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('cpf', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('birthdate', sa.DATE(), autoincrement=False, nullable=False),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='User_pkey'),
    sa.UniqueConstraint('cpf', name='User_cpf_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    sa.UniqueConstraint('phone', name='User_phone_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_User_id'), 'User', ['id'], unique=False)
    op.create_index(op.f('ix_User_email'), 'User', ['email'], unique=True)
    op.create_table('Company',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('cnpj', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('razao_social', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('orgao', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('city', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('state', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], name=op.f('Company_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('Company_pkey'))
    )
    op.create_index(op.f('ix_Company_id'), 'Company', ['id'], unique=False)
    op.drop_index(op.f('ix_Vehicle_id'), table_name='Vehicle')
    op.drop_table('Vehicle')
    # ### end Alembic commands ###
